FROM python:3.8.5-slim-buster

# System deps:
RUN pip install "poetry==1.0.0"

# Copy only requirements to cache them in docker layer
WORKDIR /code
COPY poetry.lock pyproject.toml /code/

# Project initialization:
RUN poetry config virtualenvs.create false && poetry install $(test "$YOUR_ENV" == production && echo "--no-dev") --no-interaction --no-ansi

# Creating folders, and files for a project:
COPY . /code

# Execute the Application
# ENTRYPOINT ["poetry" "run" "flask" "run"]

ENTRYPOINT ["echo", "Hello World"]


=-===========================


FROM ubuntu:xenial
RUN apt-get update
RUN apt-get install -y curl
RUN apt-get install -y jq
WORKDIR /opt/chimera/bin
RUN curl https://devops-command-line-workshop.s3.eu-west-2.amazonaws.com/cliapp --output cliapp
RUN chmod +x cliapp
COPY ./run.sh ./run.sh
RUN chmod +x ./run.sh
# The data folder should be shared with the webapp
ENV DATA_FOLDER=/opt/chimera/data
RUN mkdir /var/log/chimera

ENTRYPOINT ["./run.sh"]



FROM ubuntu:xenial
WORKDIR /opt/chimera/bin
RUN apt-get update
RUN apt-get install -y curl
RUN curl https://devops-command-line-workshop.s3.eu-west-2.amazonaws.com/webapp --output webapp
RUN chmod +x webapp
ENV WEBAPP_PORT=80
EXPOSE ${WEBAPP_PORT}
# The data folder should be shared with the cliapp
ENV DATA_FOLDER=/opt/chimera/data
RUN mkdir /var/log/chimera
ENTRYPOINT ["./webapp"]