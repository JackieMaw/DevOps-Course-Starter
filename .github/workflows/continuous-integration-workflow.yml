name: Continuous Integration
on:
  push:
    paths-ignore:
      - 'todo_app/diagrams/**'

env:
  DOCKER_TAG: 'jackiemaw/do-me:latest'
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  TF_VAR_CLIENT_ID: ${{ secrets.TF_VAR_CLIENT_ID }}
  TF_VAR_CLIENT_SECRET: ${{ secrets.TF_VAR_CLIENT_SECRET }}
  TF_VAR_FLASK_SECRET_KEY: ${{ secrets.SECRET_KEY }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image do-me:test
      run: docker build --target test --tag do-me:test .

    - name: Launch Docker container do-me:test and run unit tests
      run: docker run -e MONGODB_CONNECTIONSTRING=FAKE_CONNECTIONSTRING -e MONGODB_DATABASE=doMeDatabase -i do-me:test todo_app/tests

    - name: Launch Docker container do-me:test and run e2e tests
      run: docker run -e MONGODB_CONNECTIONSTRING=${{ secrets.MONGODB_CONNECTIONSTRING }} -e MONGODB_DATABASE=doMeDatabase -e CLIENT_ID=${{ secrets.CLIENT_ID }} -e CLIENT_SECRET=${{ secrets.CLIENT_SECRET }} -e SECRET_KEY=${{ secrets.SECRET_KEY }} -i do-me:test todo_app/tests_e2e

  deploy:
    name: Deploy to Docker Hub
    #if: ${{ github.ref == 'refs/heads/exercise-8' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: build
    steps:   
    - 
        uses: actions/checkout@v2     
    -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - 
        name: Build Docker Image
        run: docker build --target production --tag ${{ env.DOCKER_TAG }} .
    - 
        name: Push Docker Image to DockerHub
        run: docker push ${{ env.DOCKER_TAG }}

  deploy_heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: deploy
    env: 
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    steps:
      - uses: actions/checkout@v2
      - run: heroku container:login
      - run: docker pull ${{ env.DOCKER_TAG }}
      - run: docker tag ${{ env.DOCKER_TAG }} registry.heroku.com/jackiemaw-do-me/web
      - run: docker push registry.heroku.com/jackiemaw-do-me/web
      - run: heroku container:release -a jackiemaw-do-me web

  deploy_azure:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - run: terraform init
      - run: terraform apply -auto-approve
      - run: curl -dH -X POST "$(terraform output -raw webhook_URL)"
